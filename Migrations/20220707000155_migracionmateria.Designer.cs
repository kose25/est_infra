// <auto-generated />
using System;
using EstudiantesInfraestructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EstudiantesInfraestructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220707000155_migracionmateria")]
    partial class migracionmateria
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EstudiantesCore1.Entidades.EstadoEstudiante", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigo");

                    b.Property<string>("nombre");

                    b.HasKey("id");

                    b.ToTable("EstadoEstudiante","GET");
                });

            modelBuilder.Entity("EstudiantesCore1.Entidades.EstadoMateriaEstudiante", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigo");

                    b.Property<string>("nombre");

                    b.HasKey("id");

                    b.ToTable("EstadoMateriaEstudiante","GET");
                });

            modelBuilder.Entity("EstudiantesCore1.Entidades.EstadoProfesor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigo");

                    b.Property<string>("nombre");

                    b.HasKey("id");

                    b.ToTable("EstadoProfesor","GET");
                });

            modelBuilder.Entity("EstudiantesCore1.Entidades.Estudiante", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TipoDocumentoid");

                    b.Property<string>("apellido");

                    b.Property<string>("direccion");

                    b.Property<string>("documento");

                    b.Property<string>("email");

                    b.Property<int?>("estadoid");

                    b.Property<DateTime>("fechaEgreso");

                    b.Property<DateTime>("fechaIngreso");

                    b.Property<DateTime>("fechaNacimiento");

                    b.Property<DateTime>("fechaRetiro");

                    b.Property<string>("nombre");

                    b.Property<string>("sexo");

                    b.Property<string>("telefono");

                    b.HasKey("id");

                    b.HasIndex("TipoDocumentoid");

                    b.HasIndex("documento")
                        .IsUnique()
                        .HasFilter("[documento] IS NOT NULL");

                    b.HasIndex("estadoid");

                    b.ToTable("Estudiante","GET");
                });

            modelBuilder.Entity("EstudiantesCore1.Entidades.EstudiantesXMateria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("estadoid");

                    b.Property<int?>("estudianteid");

                    b.Property<int?>("materiaid");

                    b.HasKey("id");

                    b.HasIndex("estadoid");

                    b.HasIndex("estudianteid");

                    b.HasIndex("materiaid");

                    b.ToTable("EstudiantesXMateria","GET");
                });

            modelBuilder.Entity("EstudiantesCore1.Entidades.Materia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigo");

                    b.Property<int>("estadoid");

                    b.Property<string>("nombre");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("codigo")
                        .IsUnique()
                        .HasFilter("[codigo] IS NOT NULL");

                    b.HasIndex("estadoid");

                    b.ToTable("Materia","GET");
                });

            modelBuilder.Entity("EstudiantesCore1.Entidades.Profesor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido");

                    b.Property<string>("documento");

                    b.Property<int?>("estadoid");

                    b.Property<string>("nombre");

                    b.Property<int?>("tipoDocumentoid");

                    b.HasKey("id");

                    b.HasIndex("documento")
                        .IsUnique()
                        .HasFilter("[documento] IS NOT NULL");

                    b.HasIndex("estadoid");

                    b.HasIndex("tipoDocumentoid");

                    b.ToTable("Profesor","GET");
                });

            modelBuilder.Entity("EstudiantesCore1.Entidades.ProfesoresXMateria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("materiaid");

                    b.Property<int?>("profesorid");

                    b.HasKey("id");

                    b.HasIndex("materiaid");

                    b.HasIndex("profesorid");

                    b.ToTable("ProfesoresXMateria","GET");
                });

            modelBuilder.Entity("EstudiantesCore1.Entidades.TipoDocumento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigo");

                    b.Property<string>("nombre");

                    b.HasKey("id");

                    b.ToTable("TipoDocumento","GET");
                });

            modelBuilder.Entity("EstudiantesCore1.Entidades.Estudiante", b =>
                {
                    b.HasOne("EstudiantesCore1.Entidades.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoid");

                    b.HasOne("EstudiantesCore1.Entidades.EstadoEstudiante", "estado")
                        .WithMany()
                        .HasForeignKey("estadoid");
                });

            modelBuilder.Entity("EstudiantesCore1.Entidades.EstudiantesXMateria", b =>
                {
                    b.HasOne("EstudiantesCore1.Entidades.EstadoMateriaEstudiante", "estado")
                        .WithMany()
                        .HasForeignKey("estadoid");

                    b.HasOne("EstudiantesCore1.Entidades.Estudiante", "estudiante")
                        .WithMany()
                        .HasForeignKey("estudianteid");

                    b.HasOne("EstudiantesCore1.Entidades.Materia", "materia")
                        .WithMany()
                        .HasForeignKey("materiaid");
                });

            modelBuilder.Entity("EstudiantesCore1.Entidades.Materia", b =>
                {
                    b.HasOne("EstudiantesCore1.Entidades.EstadoMateriaEstudiante", "estado")
                        .WithMany()
                        .HasForeignKey("estadoid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EstudiantesCore1.Entidades.Profesor", b =>
                {
                    b.HasOne("EstudiantesCore1.Entidades.EstadoProfesor", "estado")
                        .WithMany()
                        .HasForeignKey("estadoid");

                    b.HasOne("EstudiantesCore1.Entidades.TipoDocumento", "tipoDocumento")
                        .WithMany()
                        .HasForeignKey("tipoDocumentoid");
                });

            modelBuilder.Entity("EstudiantesCore1.Entidades.ProfesoresXMateria", b =>
                {
                    b.HasOne("EstudiantesCore1.Entidades.Materia", "materia")
                        .WithMany()
                        .HasForeignKey("materiaid");

                    b.HasOne("EstudiantesCore1.Entidades.Profesor", "profesor")
                        .WithMany()
                        .HasForeignKey("profesorid");
                });
#pragma warning restore 612, 618
        }
    }
}
